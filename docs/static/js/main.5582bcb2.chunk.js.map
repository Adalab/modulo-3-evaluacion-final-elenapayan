{"version":3,"sources":["Rick_and_Morty_-_logo.png","components/CharacterCard.js","components/CharacterList.js","components/CharacterFilter.js","components/CharacterDetail.js","components/App.js","services/CharacterService.js","index.js"],"names":["module","exports","CharacterCard","props","route","id","to","className","src","img","alt","name","specie","CharacterList","characters","length","map","character","key","image","species","CharacterFilter","action","method","onSubmit","ev","preventDefault","htmlFor","type","placeholder","onChange","handleInput","value","target","CharacterDetail","icon","status","origin","episode","Fragment","App","state","characterStore","search","bind","renderCharacterDetail","fetch","then","response","json","data","setState","results","this","filter","toLowerCase","includes","routeId","parseInt","match","params","find","logo","exact","path","filterCharacters","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5582bcb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo.75509f2e.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nfunction CharacterCard(props) {\n  const route = `/character/${props.id}`;\n  return (\n    <Link to={route}>\n      <li className=\"card-container\">\n        <img className=\"card-image\" src={props.img} alt={props.name} />\n        <h3 className=\"card-name\">{props.name}</h3>\n        <p>{props.specie}</p>\n      </li>\n    </Link>\n  )\n}\n\nCharacterCard.propTypes = {\n  id: PropTypes.number,\n  img: PropTypes.string,\n  name: PropTypes.string,\n  specie: PropTypes.string\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\n\n\nfunction CharacterList(props) {\n  // console.log(props.characters)\n  if (props.characters.length > 0) {\n    return (\n      < ul className=\"list-container\">\n        {props.characters.map((character, key) => {\n          return (\n            <CharacterCard\n              key={key}\n              id={character.id}\n              img={character.image}\n              name={character.name}\n              specie={character.species}\n            />\n          )\n        })}\n      </ul >\n    )\n  }\n  else {\n    return (<p className=\"list-paragraph\">Personaje no encontrado, prueba con otro nombre!</p>)\n  }\n}\nCharacterList.propTypes = {\n  characters: PropTypes.array,\n};\n\n\nexport default CharacterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction CharacterFilter(props) {\n\n  function handleForm(ev) {\n    ev.preventDefault()\n  }\n\n\n  function handleInput(ev) {\n    props.handleInput({\n      value: ev.target.value\n    })\n  }\n\n\n  return (\n    <form className=\"form-container\" action=\"\" method=\"get\" onSubmit={handleForm}>\n      <label htmlFor=\"inputSearch\"></label>\n      <input className=\"form-input\" type=\"text\" id=\"inputSearch\" name=\"inputSearch\" placeholder=\" Busca tu personaje favorito\" onChange={handleInput} value={props.value} />\n    </form>\n  )\n}\n\nCharacterFilter.propTypes = {\n  handleInput: PropTypes.func,\n  value: PropTypes.string\n};\n\nexport default CharacterFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst CharacterDetail = (props) => {\n  let icon;\n  // console.log(props.character);\n  const skull = \"fas fa-skull\";\n  const heart = \"fas fa-heartbeat\";\n  const unknown = \"fas fa-question\";\n  if (props.character) {\n    const { image, name, species, status, origin, episode } = props.character;\n    if (status === 'Alive') {\n      icon = heart\n    } else if (status === 'Dead') {\n      icon = skull\n    } else {\n      icon = unknown\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"details-container\">\n          <Link to=\"/\" className=\"details-link\"><span>&lt;</span> Volver</Link>\n          <div className=\"card-details-container\">\n            <img className=\"card-image\" src={image} alt={name} />\n            <div className=\"card-text\">\n              <h3>{name}</h3>\n              <p>Specie: {species}</p>\n              <div className=\"status-container\"><p className=\"status-paragraph\">Status: {status}</p>\n                <i className={icon}></i></div>\n              <p>Planet: {origin.name}</p>\n              <p>Episodes: {episode.length}</p>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  } else {\n    return <p>Cargando...</p>\n  }\n}\n\nCharacterDetail.propTypes = {\n  character: PropTypes.object\n};\n\nexport default CharacterDetail;\n","import React from 'react';\nimport '../stylesheets/App.css';\nimport { fetchCharacter } from '../services/CharacterService';\nimport { Switch, Route } from 'react-router-dom';\nimport logo from '../Rick_and_Morty_-_logo.png';\nimport CharacterList from './CharacterList';\nimport CharacterFilter from './CharacterFilter';\nimport CharacterDetail from './CharacterDetail';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characterStore: [],\n      search: \"\"\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n  }\n\n\n\n  componentDidMount() {\n    fetchCharacter()\n      .then(data => {\n        this.setState({\n          characterStore: data.results\n        });\n      });\n\n  }\n\n  handleInput(data) {\n    this.setState({\n      search: data.value\n    })\n  }\n\n  filterCharacters() {\n    return this.state.characterStore\n      .filter(character => {\n        return character.name.toLowerCase().includes(this.state.search.toLowerCase());\n      })\n  }\n\n  renderCharacterDetail(props) {\n    const routeId = parseInt(props.match.params.id);\n    const character = this.state.characterStore.find(character => character.id === routeId);\n\n    // console.log(props, \"props match\");\n    return (<CharacterDetail\n      character={character}\n    />)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <header className=\"header-container\">\n          <img className=\"header-image\" src={logo} alt=\"logo\" />\n        </header>\n        <Switch>\n          <Route exact path=\"/\">\n            <CharacterFilter handleInput={this.handleInput} value={this.state.search} />\n            <CharacterList characters={this.filterCharacters()} />\n          </Route>\n          <Route path=\"/character/:id\" render={this.renderCharacterDetail} />\n        </Switch>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const randomCharacter = 'https://rickandmortyapi.com/api/character/';\n\nconst fetchCharacter = () => fetch(randomCharacter).then(response => response.json());\n\nexport { fetchCharacter };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}